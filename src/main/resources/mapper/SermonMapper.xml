<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zlatoust.mapper.contents.SermonMapper">

    <resultMap id="SermonResultMap" type="com.zlatoust.models.Sermon">
        <id property="id" column="id" />
        <result property="published" column="published" />
        <result property="removed" column="removed" />
        <result property="createdDate" column="created_date" />
        <result property="publishedDate" column="published_date" />
        <result property="removedDate" column="removed_date" />
        <result property="title" column="title" />
        <result property="description" column="description" />
        <result property="shortDescription" column="short_description" />
        <result property="canComment" column="can_comment" />
        <association property="mainImage" notNullColumn="main_image_id" javaType="com.zlatoust.models.Image" resultMap="com.zlatoust.mapper.contents.NewsMapper.ImageResultMap"/>
        <association property="author" javaType="com.zlatoust.models.User" resultMap="com.zlatoust.mapper.contents.NewsMapper.UserResultMap"/>
    </resultMap>

    <select id="getAll" resultMap="SermonResultMap">
        SELECT *
        FROM sermons s
                 INNER JOIN users u ON s.user_id = u.id
        WHERE s.removed = false
        ORDER BY s.published_date DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="getAllPublished" resultMap="SermonResultMap">
        SELECT *
        FROM sermons s
                 INNER JOIN users u ON s.user_id = u.id
        WHERE s.removed = false
          AND s.published is TRUE
        ORDER BY s.published_date DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="getAllNotPublished" resultMap="SermonResultMap">
        SELECT *
        FROM sermons s
                 INNER JOIN users u ON s.user_id = u.id
        WHERE s.removed = false
          AND s.published is FALSE
        ORDER BY s.published_date DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="getAllRemoved" resultMap="SermonResultMap">
        SELECT *
        FROM sermons s
                 INNER JOIN users u ON s.user_id = u.id
        WHERE s.removed = true
        ORDER BY s.removed DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- Получить запись по ID -->
    <select id="getById" parameterType="long" resultMap="SermonResultMap">
        SELECT * FROM sermons s
                          INNER JOIN users u ON s.user_id = u.id
        WHERE s.id = #{id};
    </select>

    <!-- Вставить новую запись -->
    <insert id="insert" parameterType="com.zlatoust.models.Sermon" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sermons (published, removed, created_date, published_date, removed_date,
                                   title, description, short_description,
                                   can_comment, user_id)
        VALUES (#{published}, #{removed}, #{createdDate}, #{publishedDate}, #{removedDate},
                #{title}, #{description}, #{shortDescription},
                #{canComment}, #{author.id})
    </insert>

    <!-- Обновить существующую запись -->
    <update id="update" parameterType="com.zlatoust.models.Sermon">
        UPDATE sermons
        SET published = #{published},
            removed = #{removed},
            created_date = #{createdDate},
            published_date = #{publishedDate},
            removed_date = #{removedDate},
            title = #{title},
            description = #{description},
            short_description = #{shortDescription},
            can_comment = #{canComment},
            user_id = #{author.id}
        WHERE id = #{id}
    </update>

    <!-- Удалить запись по ID -->
    <delete id="delete" parameterType="long">
        DELETE FROM sermons WHERE id = #{id}
    </delete>

    <!-- Подсчет количества записей -->
    <select id="publishedCount" resultType="int">
        SELECT COUNT(*) FROM sermons
        WHERE removed = false
          AND published is TRUE
    </select>

    <select id="getImages" parameterType="long" resultType="com.zlatoust.models.Image">
        SELECT i.* FROM images i
                            INNER JOIN sermons_images ni ON i.id = ni.image_id
        WHERE ni.sermons_id = #{id}
    </select>

    <select id="getMainImage" parameterType="long" resultType="com.zlatoust.models.Image">
        SELECT i.* FROM images i
                            INNER JOIN sermons n ON i.id = n.main_image_id
        WHERE n.id = #{id};
    </select>

    <insert id="insertImage">
        INSERT INTO sermons_images (sermons_id, image_id) VALUES (#{contentId}, #{imageId})
    </insert>

    <delete id="deleteImage" parameterType="map">
        DELETE FROM sermons_images ni WHERE ni.sermons_id = #{itemId} AND ni.image_id = #{imageId}
    </delete>

    <delete id="setMainImage" parameterType="map">
        UPDATE sermons s SET main_image_id = #{imageId} WHERE s.id = #{itemId};
    </delete>

    <delete id="deleteContentImages" parameterType="long">
        DELETE FROM sermons_images ni
        WHERE ni.sermons_id = #{itemId}
    </delete>

</mapper>
