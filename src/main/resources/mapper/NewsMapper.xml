<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zlatoust.mapper.contents.NewsMapper">

    <resultMap id="UserResultMap" type="com.zlatoust.models.User">
        <id property="id" column="user_id" />
        <result property="email" column="email" />
        <result property="username" column="username" />
        <result property="surname" column="surname" />
        <result property="patronymic" column="patronymic" />
        <result property="password" column="password" />
        <result property="role" column="role" typeHandler="com.zlatoust.utils.EnumTypeHandler"/>
    </resultMap>

    <resultMap id="AlbumResultMap" type="com.zlatoust.models.Album">
        <id property="id" column="album_id"/>
        <result property="title" column="album_title" />
        <result property="timestamp" column="timestamp" />
        <result property="description" column="album_description" />
        <result property="eventDate" column="event_date" />
        <result property="photographer" column="photographer" />
    </resultMap>

    <resultMap id="ImageResultMap" type="com.zlatoust.models.Image">
        <id property="id" column="main_image_id" />
        <result property="data" column="data" />
        <result property="type" column="type" />
    </resultMap>

    <resultMap id="NewsResultMap" type="com.zlatoust.models.News">
        <id property="id" column="id" />
        <result property="published" column="published" />
        <result property="removed" column="removed" />
        <result property="createdDate" column="created_date" />
        <result property="publishedDate" column="published_date" />
        <result property="removedDate" column="removed_date" />
        <result property="viewDateFrom" column="view_date_from" />
        <result property="viewDateTo" column="view_date_to" />
        <result property="title" column="title" />
        <result property="description" column="description" />
        <result property="shortDescription" column="short_description" />
        <result property="canComment" column="can_comment" />
        <association property="mainImage" notNullColumn="main_image_id" javaType="com.zlatoust.models.Image" resultMap="ImageResultMap"/>
        <association property="author" javaType="com.zlatoust.models.User" resultMap="UserResultMap"/>
        <association property="album" notNullColumn="album_id" column="album_id" javaType="com.zlatoust.models.Album" resultMap="AlbumResultMap"/>
    </resultMap>

    <sql id="BaseSelect">
        SELECT n.*, u.*, a.timestamp, a.event_date, a.photographer, a.title as album_title, a.description as album_description
        FROM news n
                 INNER JOIN users u ON n.user_id = u.id
                 LEFT JOIN albums a on a.id = n.album_id
    </sql>

    <select id="getAll" resultMap="NewsResultMap">
        <include refid="BaseSelect"/>
        WHERE n.removed = false
        ORDER BY n.published_date DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>


    <select id="getAllPublished" resultMap="NewsResultMap">
        <include refid="BaseSelect"/>
        WHERE n.removed = false
            AND n.published is TRUE
        ORDER BY n.published_date DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="getAllNotPublished" resultMap="NewsResultMap">
        <include refid="BaseSelect"/>
        WHERE n.removed = false
          AND n.published IS FALSE
        ORDER BY n.published_date DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="getAllRemoved" resultMap="NewsResultMap">
        <include refid="BaseSelect"/>
        WHERE n.removed = true
        ORDER BY n.removed DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>


    <!-- Получить запись по ID -->
    <select id="getById" parameterType="long" resultMap="NewsResultMap">
        <include refid="BaseSelect"/>
        WHERE n.id = #{id};
    </select>

    <!-- Вставить новую запись -->
    <insert id="insert" parameterType="com.zlatoust.models.News" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO news (published, removed, created_date, published_date, removed_date,
                          view_date_from, view_date_to, title, description, short_description,
                          can_comment, user_id, album_id)
        VALUES (#{published}, #{removed}, #{createdDate}, #{publishedDate}, #{removedDate},
                #{viewDateFrom}, #{viewDateTo}, #{title}, #{description}, #{shortDescription},
                #{canComment}, #{author.id}, #{album.id})
    </insert>

    <!-- Обновить существующую запись -->
    <update id="update" parameterType="com.zlatoust.models.News">
        UPDATE news
        SET published = #{published},
            removed = #{removed},
            created_date = #{createdDate},
            published_date = #{publishedDate},
            removed_date = #{removedDate},
            view_date_from = #{viewDateFrom},
            view_date_to = #{viewDateTo},
            title = #{title},
            description = #{description},
            short_description = #{shortDescription},
            can_comment = #{canComment},
            user_id = #{author.id},
            album_id = #{album.id}
        WHERE id = #{id}
    </update>

    <!-- Удалить запись по ID -->
    <delete id="delete" parameterType="long">
        DELETE FROM news WHERE id = #{id}
    </delete>

    <!-- Подсчет количества записей -->
    <select id="publishedCount" resultType="int">
        SELECT COUNT(*) FROM news
        WHERE removed = false
          AND published is TRUE
    </select>

    <insert id="insertImage">
        INSERT INTO news_images (news_id, image_id) VALUES (#{contentId}, #{imageId})
    </insert>

    <select id="getImages" parameterType="long" resultType="com.zlatoust.models.Image">
        SELECT i.* FROM images i
            INNER JOIN news_images ni ON i.id = ni.image_id
        WHERE ni.news_id = #{id}
    </select>

    <delete id="deleteImage" parameterType="map">
        DELETE FROM news_images ni WHERE ni.news_id = #{itemId} AND ni.image_id = #{imageId}
    </delete>

    <delete id="setMainImage" parameterType="map">
        UPDATE news n SET main_image_id = #{imageId} WHERE n.id = #{itemId};
    </delete>

    <select id="getMainImage" parameterType="long" resultType="com.zlatoust.models.Image">
        SELECT i.* FROM images i
                            INNER JOIN news n ON i.id = n.main_image_id
        WHERE n.id = #{id};
    </select>

    <delete id="deleteContentImages" parameterType="long">
        DELETE FROM news_images ni
               WHERE ni.news_id = #{itemId}
    </delete>

</mapper>
